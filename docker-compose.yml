version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: dear-future-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dear_future_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Adminer - Database management UI (optional, can be removed if not needed)
  adminer:
    image: adminer:latest
    container_name: dear-future-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres

  # UI Development Server (optional - you can also run "npm run dev" directly in ui/ folder)
  # Uncomment this service if you want to run the UI in Docker
  # ui:
  #   build:
  #     context: ./ui
  #     dockerfile: Dockerfile.dev
  #   container_name: dear-future-ui
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./ui:/app
  #     - /app/node_modules
  #     - /app/.next
  #   environment:
  #     - NODE_ENV=development
  #     - NEXT_PUBLIC_API_URL=http://localhost:8080
  #   command: npm run dev

volumes:
  postgres_data:
